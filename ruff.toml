# Ruff configuration for linting and formatting
# https://docs.astral.sh/ruff/

target-version = "py311"
line-length = 100
indent-width = 4

[lint]
# Enable all rules by default, then disable specific ones
select = ["ALL"]
ignore = [
    # Disable some overly strict rules
    "D100",    # Missing docstring in public module
    "D101",    # Missing docstring in public class
    "D102",    # Missing docstring in public method
    "D103",    # Missing docstring in public function
    "D104",    # Missing docstring in public package
    "D105",    # Missing docstring in magic method
    "D107",    # Missing docstring in __init__
    "ANN101",  # Missing type annotation for self
    "ANN102",  # Missing type annotation for cls
    "COM812",  # Trailing comma missing
    "ISC001",  # Implicitly concatenated string literals
    "Q000",    # Single quotes found but double quotes preferred
    "Q001",    # Single quote docstring found but double quotes preferred
    "Q002",    # Single quote multiline found but double quotes preferred
    "Q003",    # Change outer quotes to avoid escaping inner quotes
    "W191",    # Indentation contains tabs
    "E501",    # Line too long (handled by formatter)
    "PLR0913", # Too many arguments to function call
    "PLR2004", # Magic value used in comparison
    "S101",    # Use of assert detected (OK in tests)
    "T201",    # print found (we're replacing these anyway)
    "ERA001",  # Found commented-out code
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[lint.per-file-ignores]
# Tests can use magic values, assertions, etc.
"tests/**/*.py" = [
    "S101",    # asserts allowed in tests
    "PLR2004", # Magic value used in comparison
    "S106",    # Possible hardcoded password
    "ARG",     # Unused function args
    "FBT",     # Don't care about booleans as positional arguments in tests
    "PLR0913", # Too many arguments to function call
    "PLR0915", # Too many statements
    "S311",    # Standard pseudo-random generators are not suitable for security/cryptographic purposes
]

# Init files don't need docstrings
"**/__init__.py" = [
    "F401",  # Imported but unused
    "D104",  # Missing docstring in public package
]

# Scripts and CLI tools
"scripts/**/*.py" = [
    "T201",  # print statements OK in scripts
    "S603",  # subprocess call - check for execution of untrusted input
    "S607",  # Starting a process with a partial executable path
]

[lint.isort]
known-first-party = ["src"]
force-sort-within-sections = true
split-on-trailing-comma = true

[lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"

[lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query", "fastapi.Path"]

[lint.mccabe]
max-complexity = 10

[lint.pylint]
max-args = 8
max-branches = 12
max-returns = 6
max-statements = 50

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
